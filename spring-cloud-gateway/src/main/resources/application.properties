spring.application.name=spring-cloud-gateway

# Server port for the API Gateway
server.port=8080

#Jwt properties
jwt.secret=M2n9cT6vA1b7D5j4P0wX2qL8yZ3vF1xJ9lU3kR8sQ6mT5eO7pW2rY4aH9zL7cB1e
jwt.expiration=604800000

# Enable Eureka client if you are using Eureka for service discovery
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Route Definitions
spring.cloud.gateway.routes[0].id=USER-SERVICE
spring.cloud.gateway.routes[0].uri=http://localhost:8001
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/users/** 

spring.cloud.gateway.routes[1].id=RESTAURANT-SERVICE
spring.cloud.gateway.routes[1].uri=http://localhost:8002
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/restaurants/** 

spring.cloud.gateway.routes[2].id=BOOKING-SERVICE
spring.cloud.gateway.routes[2].uri=http://localhost:8003
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/bookings/** 

# Enable CORS if needed
#spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedOrigins=*  # Allow all origins
#spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedMethods=GET,POST,PUT,DELETE

# Set up logging for debugging 
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.springframework.security=DEBUG
